
  "editor.tokenColorCustomizations" = {
    "textMateRules" = [
      #variable use
      {
        "scope" = [
          #language css
          "support.constant.property-value"
          #constant
          "variable.other.constant"
        ];
        "settings" = {
          "fontStyle" = "";
          "foreground" = "#004700FF";
        };
      }
      #variable
      {
        "scope" = [
          #language css
          "variable.css"
        ];
        "settings" = {
          "fontStyle" = "bold";
          "foreground" = "#004700FF";
        };
      }
      #property use
      {
        "scope" = [
          "variable.other.object.property"
          "variable.other.property"
        ];
        "settings" = {
          "fontStyle" = "";
          "foreground" = "#004700FF";
        };
      }
      #property
      {
        "scope" = [
          #language nix
          "entity.other.attribute-name.multipart"
          #language yaml
          "entity.name.tag"
          #language json
          "support.type.property-name"
          "meta.object-literal.key"
        ];
        "settings" = {
          "fontStyle" = "bold";
          "foreground" = "#004700FF";
        };
      }
      #parameter use
      {
        "scope" = [
          #language nix
          "variable.parameter.name"
          #language css
          "variable.argument"
        ];
        "settings" = {
          "fontStyle" = "";
          "foreground" = "#004700FF";
        };
      }
      #parameter
      {
        "scope" = [
          #language nix
          "variable.parameter.function"
          #language jsx
          "entity.other.attribute-name"
        ];
        "settings" = {
          "fontStyle" = "bold";
          "foreground" = "#004700FF";
        };
      }
      #literal use
      {
        "scope" = [
          #boolean
          "constant.language"
        ];
        "settings" = {
          "fontStyle" = "underline italic";
          "foreground" = "#7F0000FF";
        };
      }
      #literal
      {
        "scope" = [
          #colour
          "constant.other.color"
          #numeric
          "constant.numeric"
          #string unquoted
          "string.unquoted"
          #string template
          "string.template"
          #string regexp
          "string.regexp"
          #string quoted
          "string.quoted"
        ];
        "settings" = {
          "fontStyle" = "italic";
          "foreground" = "#7F0000FF";
        };
      }
      #function use
      {
        "scope" = [
          #language jsx
          "support.class.component"
          #language css
          "support.function"
          "entity.name.function"
        ];
        "settings" = {
          "fontStyle" = "italic";
          "foreground" = "#0000CFFF";
        };
      }
      #function
      {
        "scope" = [
          #language css
          "entity.other.attribute-name.class.css"
        ];
        "settings" = {
          "fontStyle" = "bold";
          "foreground" = "#0000CFFF";
        };
      }
      #keyword
      {
        "scope" = [
          #import
          "keyword.operator.expression.import"
          #switch: default | case
          "keyword.control.switch"
          #export
          "keyword.control.export"
          #async
          "storage.modifier.async"
          #await | return
          "keyword.control.flow"
          #class instance
          "keyword.operator.new"
          #class
          "storage.type.class"
          #const
          "storage.type"
        ];
        "settings" = {
          "fontStyle" = "strikethrough";
          "foreground" = "#3C3C3CFF";
        };
      }
      #punctuation
      {
        "scope" = [
          #language nix bracket 3
          "punctuation.definition.attrset"
          #language css bracket 3
          "punctuation.section.property-list"
          #language css bracket 3
          "punctuation.section.property-list.begin.bracket.curly"
          "punctuation.section.property-list.end.bracket.curly"
          #language nix bracket 2
          "punctuation.definition.attrset-or-function"
          "punctuation.definition.list"
          #language css bracket 0
          "punctuation.section.function.begin"
          "punctuation.section.function.end"
          #bracket 3
          "punctuation.definition.block"
          #bracket 2
          "punctuation.definition.array"
          "meta.brace.square"
          #bracket 1
          "punctuation.definition.tag"
          #bracket 0
          "punctuation.definition.parameters"
          "meta.brace.round"

          #language json comma-object
          "punctuation.separator.dictionary.pair"
          #language json comma-array
          "punctuation.separator.array"
          #language json colon
          "punctuation.separator.dictionary.key-value"
          #language nix
          "keyword.operator.bind"
          #language css
          "punctuation.definition.entity"
          #embedded
          "punctuation.section.embedded"
          #sign= ... .. etc
          "keyword.operator.spread"
          #sign= a || b etc
          "keyword.operator.logical"
          #sign= a in b etc
          "keyword.operator.expression"
          #comma
          "punctuation.separator.comma"
          #colon semi
          "punctuation.terminator"
          #colon case
          "punctuation.definition.section.case-statement"
          #actor
          "punctuation.accessor"

          #language yaml array
          "punctuation.definition.block.sequence.item.yaml"
          #language json quote property
          "punctuation.support.type.property-name"
          #language json quote literal
          "punctuation.definition.dictionary"
          #language json quote
          "punctuation.definition.string"
          #binding
          "punctuation.definition.binding-pattern"
        ];
        "settings" = {
          "fontStyle" = "";
          "foreground" = "#636363FF";
        };
      }
      #assignment
      {
        "scope" = [
          #equal
          "keyword.operator.assignment"
          #colon
          "punctuation.separator.key-value"
          #arrow
          "storage.type.function.arrow"
        ];
        "settings" = {
          "fontStyle" = "underline";
          "foreground" = "#636363FF";
        };
      }
      #bracket
      {
        "scope" = [
          #language nix bracket 3
          "punctuation.definition.attrset"
          "punctuation.section.bracket"
          #language css bracket 3
          "punctuation.section.property-list"
          #language css bracket 3
          "punctuation.section.property-list.begin.bracket.curly"
          "punctuation.section.property-list.end.bracket.curly"
          #language nix bracket 2
          "punctuation.definition.attrset-or-function"
          "punctuation.definition.list"
          #language css bracket 0
          "punctuation.section.function.begin"
          "punctuation.section.function.end"
          #bracket 3
          "punctuation.definition.block"
          #bracket 2
          "punctuation.definition.array"
          "meta.brace.square"
          #bracket 1
          "punctuation.definition.tag"
          #bracket 0
          "meta.brace.round"
        ];
        "settings" = {
          "fontStyle" = "";
          "foreground" = "#636363FF";
        };
      }
      #comment
      {
        "scope" = [
          #variable unknown
          "variable.other.readwrite"
          #variable inbuilt
          "variable.other.object"
          #comment symbol
          "punctuation.definition.comment"
          #comment block
          "comment.block"
          #comment line
          "comment.line"
        ];
        "settings" = {
          "fontStyle" = "";
          "foreground" = "#636363FF";
        };
      }
    ];
  };
